name: Build
on:
  push:
    branches-ignore:
      - rebase-pull-request**
      - cherry-pick-rebase-pull-request**
    tags-ignore:
      - '**'
jobs:
  build-job:
    name: "Build Linux"
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}-linux
    env:
      GH_TOKEN: ${{ secrets.TESTMINTS_PAT }}
      GITHUB_TOKEN: ${{ secrets.TESTMINTS_PAT }}
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    outputs:
      version: ${{ env.TAGGER_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Up Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "6215634+robertfmurdock@users.noreply.github.com"
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '22'
      - uses: testspace-com/setup-testspace@v1
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          domain: robertfmurdock
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - name: Build ðŸ”¨
        run: ./gradlew -p plugins-test :check
      - name: Collect Results
        if: ${{ always() }}
        run: ./gradlew collectResults
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-output
          path: build/test-output/
      - name: Push result to Testspace server
        if: ${{ github.ref == 'refs/heads/master' && always()}}
        run: |
          testspace $(find . -path *test-results* -name *.xml)
  build-job-mac:
    name: "Build Mac"
    runs-on: macos-latest
    needs: build-job
    concurrency:
      group: ${{ github.ref }}-mac
      cancel-in-progress: true
    env:
      TAGGER_VERSION: ${{needs.build-job.outputs.version}}
      GH_TOKEN: ${{ secrets.TESTMINTS_PAT }}
      GITHUB_TOKEN: ${{ secrets.TESTMINTS_PAT }}
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '22'
      - uses: testspace-com/setup-testspace@v1
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          domain: robertfmurdock
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - name: Release ðŸ”¨
        run: |
          ./gradlew release \
          -Pversion=${{ env.TAGGER_VERSION }} \
          -Prelease-target=mac \
          --scan \
          --no-configuration-cache \
          -x :plugins:publish \
          -x :plugins:initializeSonatypeStagingRepository \
          -x :plugins:closeSonatypeStagingRepository \
          -x :plugins:action-mint-plugin:publishPlugins \
          -x :plugins:mint-logs-plugin:publishPlugins
      - name: Collect Test Results
        if: ${{ always() }}
        run: ./gradlew collectResults
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-output
          path: |
            build/test-output/
      - name: Push result to Testspace server
        if: ${{ github.ref == 'refs/heads/master' && always()}}
        run: |
          testspace $(find . -path *test-results* -name *.xml)
